<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>c#基础语法</title>
      <link href="/2023/05/13/c-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2023/05/13/c-%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h1><p>类（class）是最基础的c#类型。类是一个数据结构，将状态（字段）和操作（方法和其他函数成员）组合在一个单元中。类为动态创建的类实例（instance）提供了定义，实例也称为（object）。类支持继承（inheritance）和多态性（polymorphism），这是派生类（derived class）可用来扩展和专用化基类（base class）的机制。<br>使用类声明可以创建新的类。类声明以一个声明头开始，其组成方式如下：先指定类的特性和修饰符，然后是类的名称，接着是基类（如有）以及该类实现的接口。声明后面跟着类体，它由一组位于一对大括号{和}之间的成员声明组成。<br>下面是一个名为Point的简单类的声明：</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Point</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> x,y;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Point</span>(<span class="params"><span class="built_in">int</span> x,<span class="built_in">int</span> y</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x;</span><br><span class="line">        <span class="keyword">this</span>.y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类与对象的关系"><a href="#类与对象的关系" class="headerlink" title="类与对象的关系"></a>类与对象的关系</h3><p>对象也叫实例，是类经过“实例化”后得到的内存中的实体<br>依照类，我们可以创建对象，这就是“实例化”<br>使用new操作符创建类的实例<br>引用变量与实例的关系</p><h3 id="类的三大成员"><a href="#类的三大成员" class="headerlink" title="类的三大成员"></a>类的三大成员</h3><p>属性（Propety）<br>方法（Method）<br>事件（Event）</p><h1 id="类的静态成员与实例成员"><a href="#类的静态成员与实例成员" class="headerlink" title="类的静态成员与实例成员"></a>类的静态成员与实例成员</h1><h3 id="dll-Dynamic-link-library-动态链接库"><a href="#dll-Dynamic-link-library-动态链接库" class="headerlink" title=".dll(Dynamic link library)动态链接库"></a>.dll(Dynamic link library)动态链接库</h3><h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><p>类（或对象）之间的耦合关系<br>优秀的程序追求“高内聚，低耦合”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>c#入门</title>
      <link href="/2023/05/01/c-%E5%85%A5%E9%97%A8/"/>
      <url>/2023/05/01/c-%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="常见的c-编写的各类应用程序"><a href="#常见的c-编写的各类应用程序" class="headerlink" title="常见的c#编写的各类应用程序"></a>常见的c#编写的各类应用程序</h1><h3 id="Console"><a href="#Console" class="headerlink" title="Console"></a>Console</h3><p>Console    Application(控制台应用)</p><h3 id="WPF-Windows-Presentation-Foudation"><a href="#WPF-Windows-Presentation-Foudation" class="headerlink" title="WPF (Windows Presentation Foudation)"></a>WPF (Windows Presentation Foudation)</h3><p>Windows Presentation Foudation(桌面指南)，这是一个与分辨率无关的UI框架，使用基于矢量的呈现引擎，构建用于利用现代图形硬件。 WPF 属于 ‘.NET’，因此可以生成整合 .NET API 其他元素的应用程序。</p><h3 id="Windows-Forms-Old"><a href="#Windows-Forms-Old" class="headerlink" title="Windows Forms(Old)"></a>Windows Forms(Old)</h3><h3 id="ASP-NET-Web-Forms-Old"><a href="#ASP-NET-Web-Forms-Old" class="headerlink" title="ASP.NET Web Forms(Old)"></a>ASP.NET Web Forms(Old)</h3><h3 id="ASP-NET-MVC-Model-View-Controller"><a href="#ASP-NET-MVC-Model-View-Controller" class="headerlink" title="ASP.NET MVC(Model-View-Controller)"></a>ASP.NET MVC(Model-View-Controller)</h3><h3 id="WCF-Windows-Communication-Foundation"><a href="#WCF-Windows-Communication-Foundation" class="headerlink" title="WCF(Windows Communication Foundation)"></a>WCF(Windows Communication Foundation)</h3><h3 id="Windows-Store-Application"><a href="#Windows-Store-Application" class="headerlink" title="Windows Store Application"></a>Windows Store Application</h3><h3 id="Windows-Phone-Application"><a href="#Windows-Phone-Application" class="headerlink" title="Windows Phone Application"></a>Windows Phone Application</h3><h3 id="Cloud-Windows-Azure"><a href="#Cloud-Windows-Azure" class="headerlink" title="Cloud(Windows Azure)"></a>Cloud(Windows Azure)</h3><h3 id="WF-Workflow-Foundation"><a href="#WF-Workflow-Foundation" class="headerlink" title="WF(Workflow Foundation)"></a>WF(Workflow Foundation)</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/04/08/hello-world/"/>
      <url>/2023/04/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet</title>
      <link href="/2022/10/12/Servlet/"/>
      <url>/2022/10/12/Servlet/</url>
      
        <content type="html"><![CDATA[<h1 id="Servlet规范"><a href="#Servlet规范" class="headerlink" title="Servlet规范"></a>Servlet规范</h1><p>servlet规范来自于<span id="gray">JAVAEE</span>规范中的一种<br>作用:<br>    (1)在Servlet规范中，指定’动态资源文件’开发步骤<br>    (2)在Servlet规范中，指定Http服务器调用动态资源文件规则<br>    (3)在Servlet规范中，指定Http服务器管理动态资源文件实例对象规则<br>Servlet接口实现类<br>    (1)Servlet接口来自于Servlet规范下的一个接口，这个接口存在Http服务器中<br>    (2)Tomcat服务器下lib文件目录里有一个’servlet-api.jar’存放Servlet接口(javax&#x2F;servlet&#x2F;Servlet)<br>    (3)Servlet规范中，任务、http服务器能调用的’动态资源文件’必须是一个Servlet接口实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>&#123;</span><br><span class="line">    <span class="comment">//不是动态资源文件，Tomcat无权调用</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Teacher</span> <span class="keyword">implements</span> <span class="title class_">Servlet</span>&#123;</span><br><span class="line">    <span class="comment">//合法动态资源文件，Tomcat有权利调用</span></span><br><span class="line">    <span class="type">Servlet</span> <span class="variable">obj</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Teacher</span>();</span><br><span class="line">    obj.doGet()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java简单案例</title>
      <link href="/2022/09/13/Java%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/"/>
      <url>/2022/09/13/Java%E7%AE%80%E5%8D%95%E6%A1%88%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h3 id="两只老虎"><a href="#两只老虎" class="headerlink" title="两只老虎"></a>两只老虎</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*动物园里有两只老虎，已知两只老虎体重分别为180kg、200kg，请用程序实现判断两只老虎的体重是否相同*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorTest01</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">weight1</span> <span class="operator">=</span> <span class="number">180</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">weight2</span> <span class="operator">=</span> <span class="number">200</span>;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">b</span> <span class="operator">=</span> weight1 == weight2 ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;b:&quot;</span>+b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="三个和尚"><a href="#三个和尚" class="headerlink" title="三个和尚"></a>三个和尚</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="comment">/*一座寺庙里有三个和尚，已知他们的身高分别为150、210、165cm，请用程序实现获取这三个和尚的最高身高*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorTest02</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> <span class="number">150</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> <span class="number">210</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> <span class="number">165</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">tempheight</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxheight</span> <span class="operator">=</span> tempheight &gt; height3 ? tempheight : height3;</span><br><span class="line">        System.out.println(<span class="string">&quot;maxheight:&quot;</span> + maxheight);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//升级版//</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OperatorTest03</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第一个和尚的身高&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">height1</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第二个和尚的身高&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">height2</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入第三个和尚的身高&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">height3</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">tempheight</span> <span class="operator">=</span> height1 &gt; height2 ? height1 : height2;</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxheight</span> <span class="operator">=</span> tempheight &gt; height3 ? tempheight : height3;</span><br><span class="line">        System.out.println(<span class="string">&quot;三个和尚中身高最高的是&quot;</span> + maxheight +<span class="string">&quot;cm&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="奇偶数"><a href="#奇偶数" class="headerlink" title="奇偶数"></a>奇偶数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Iftest01</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入一个整数&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">number</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span>(number%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            System.out.println(number +<span class="string">&quot;是偶数&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(number +<span class="string">&quot;是奇数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java运算符</title>
      <link href="/2022/09/06/Java%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
      <url>/2022/09/06/Java%E8%BF%90%E7%AE%97%E7%AC%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><p>运算符：对常量或者变量进行操作的符号<br>表达式：用运算符把常量或者变量连接起来符合java语法的式子就可以称为表达式。<br>不同运算符连接的表达式体现的是不同类型的表达式。</p><h3 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h3><p>+: ‘加’<br>-: ‘减’<br>*: ‘乘’<br>&#x2F;: ‘除’<br>%: ‘取余’</p><h3 id="赋值运算符”-x3D-”"><a href="#赋值运算符”-x3D-”" class="headerlink" title="赋值运算符”&#x3D;”"></a>赋值运算符”&#x3D;”</h3><ul><li><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;</td><td>赋值</td><td>a&#x3D;10,将10赋值给变量a</td></tr><tr><td>+&#x3D;</td><td>加后赋值</td><td>a+&#x3D;b,将a+b的值给a</td></tr><tr><td>-&#x3D;</td><td>加后赋值</td><td>a-&#x3D;b,将a-b的值给a</td></tr><tr><td>*&#x3D;</td><td>加后赋值</td><td>a*&#x3D;b,将a*b的值给a</td></tr><tr><td>&#x2F;&#x3D;</td><td>加后赋值</td><td>a&#x2F;&#x3D;b,将a&#x2F;b的值给a</td></tr><tr><td>%&#x3D;</td><td>取余后赋值</td><td>a%&#x3D;b,将a%b的值给a</td></tr></tbody></table></li></ul><p>“+&#x3D;”等扩展的赋值运算符隐含了强制类型转换</p><h3 id="自增自减运算符"><a href="#自增自减运算符" class="headerlink" title="自增自减运算符"></a>自增自减运算符</h3><ul><li><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td><b>++</b></td><td>自增</td><td>变量的值+1</td></tr><tr><td>--</td><td>自减</td><td>变量的值-1</td></tr></tbody></table></li></ul><p>tips：<br>    “++”和”-&amp;minus”既可以放在变量的后边，也可以放在变量的前边。<br>    单独使用的时候，”++”和”-&amp;minus”无论是放在变量的前边还是后边，结果是一样的。<br>    参与操作的时候，如果放在变量的后边，先拿变量参与操作，后拿变量做++或者--。<br>    参与操作的时候，如果放在变量的前边，先拿变量做++或者--，后拿变量参与操作。</p><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><ul><li><table><thead><tr><th>符号</th><th>说明</th></tr></thead><tbody><tr><td>&#x3D;&#x3D;</td><td>a&#x3D;&#x3D;b,判断a和b的值是否相等，成立为true，不成立为false</td></tr><tr><td>!&#x3D;</td><td>a!&#x3D;b,判断a和b的值是否不相等，成立为true，不成立为false</td></tr><tr><td>&gt;</td><td>a&gt;b,判断a是否大于b，成立为true，不成立为false</td></tr><tr><td>&lt;</td><td>a&lt;((b)),判断a是否小于b,成立为true，不成立为false</td></tr><tr><td>&gt;&#x3D;</td><td>a&gt;&#x3D;b,判断a是否大于等于b，成立为true，不成立为false</td></tr><tr><td>&lt;&#x3D;</td><td>a&lt;&#x3D;b,判断a是否小于等于b，成立为true，不成立为false</td></tr></tbody></table></li></ul><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><ul><li><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td><b>&amp;</b></td><td>逻辑与</td><td>a&amp;b，a和b都是true，结果为true，否则为false</td></tr><tr><td><b>|</b></td><td>逻辑或</td><td>a</td></tr><tr><td><b>^</b></td><td>逻辑异或</td><td>a^b,a和b结果不同为true，相同为false</td></tr><tr><td><b>!</b></td><td>逻辑非</td><td>!a,结果和a的结果正好相反</td></tr></tbody></table></li></ul><p>逻辑运算符是用来连接关系表达式的运算符，也可以直接连接布尔类型的常量或者变量</p><h3 id="短路逻辑运算符"><a href="#短路逻辑运算符" class="headerlink" title="短路逻辑运算符"></a>短路逻辑运算符</h3><ul><li><table><thead><tr><th>符号</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td><b>&amp;&amp;</b></td><td>短路与</td><td>作用和&amp;相同，但是有短路效果</td></tr><tr><td><b>||</b></td><td>短路或</td><td>作用和</td></tr></tbody></table></li></ul><p>tips：<br>    逻辑与&amp;，无论左边真假，右边都要执行<br>    短路与&amp;&amp;，如果左边为真，右边执行；如果左边为假，右边不执行<br>    逻辑或|，无论左边真假，右边都要执行<br>    多路或||，如果左边为假，右边执行，如果左边为真，右边不执行</p><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p>格式：关系表达式?表达式1:表达式2<br>范例：<strong>a&gt;b?a:b;</strong><br>计算规则：<br>    首先计算关系表达式的值<br>    如果值为true，表达式1的值就是运算结果<br>    如果值为false，表达式2的值就是运算结果</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础语法</title>
      <link href="/2022/09/04/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/09/04/Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h1><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">单行注释</span><br><span class="line">    格式：<span class="comment">//注释信息</span></span><br><span class="line">多行注释</span><br><span class="line">    格式：<span class="comment">/*注释信息*/</span></span><br><span class="line">文档注释</span><br><span class="line">    格式：<span class="comment">/**注释信息*/</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    Java程序中最基本组成单位是类.</span></span><br><span class="line"><span class="comment">    类的定义格式：</span></span><br><span class="line"><span class="comment">        public class 类名&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    这是我定义的HelloWorld类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        这是main方法</span></span><br><span class="line"><span class="comment">        main方法是程序的入口方法,代码的执行是从main方法开始的</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 这是输出语句，&quot;&quot;里面的内容是可以改变的</span></span><br><span class="line">        System.out.println(<span class="string">&quot;小夏初入Java&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p>关键字的字母<b>全部小写</b><br>常用的代码编辑器，针对关键字有特殊的颜色标记，非常直观。</p><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><p>在程序运行过程中，其值不可以改变的量</p><ul><li><table><thead><tr><th>常量类型</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>字符串常量</td><td>用双引号括起来的内容</td><td>“HelloWorld” , “别在这理发店”</td></tr><tr><td>整数常量</td><td>不带小数的数字</td><td>666,114514</td></tr><tr><td>小数常量</td><td>带小数的数字</td><td>13.14，114.514</td></tr><tr><td>字符常量</td><td>用单引号括起来的内容</td><td>‘ABC’,’やらないか？’，’这是一个人能够做到的最自私的事’</td></tr><tr><td>布尔常量</td><td>布尔值，表示真假</td><td>只有两个值： true,false</td></tr><tr><td>空常量</td><td>一个特殊的值，空值</td><td>值是：null</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConstanDemo</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="comment">//字符串常量</span></span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;小夏不想上班&quot;</span>);</span><br><span class="line">        <span class="comment">//整数常量</span></span><br><span class="line">        System.out.println(<span class="number">666</span>);</span><br><span class="line">        System.out.println(-<span class="number">88</span>);</span><br><span class="line">        <span class="comment">//小数常量</span></span><br><span class="line">        System.out.println(<span class="number">13.14</span>);</span><br><span class="line">        System.out.println(-<span class="number">5.21</span>);</span><br><span class="line">        <span class="comment">//字符常量</span></span><br><span class="line">        System.out.println(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">        System.out.println(<span class="string">&#x27;捏&#x27;</span>);</span><br><span class="line">        <span class="comment">//布尔常量</span></span><br><span class="line">        System.out.println(<span class="literal">true</span>);</span><br><span class="line">        Sysetm.out.println(<span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//空常量不能直接输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>计算机存储设备的最小信息单元叫”位”，我们又称之为”比特位”,通常用小写的字母’b’表示。而计算机中最小的存储单元叫”字节”,通常用大写字母”B”表示，字节是由连续的8个位组成。<br>1B（字节）&#x3D; 8bit<br>1KB &#x3D; 1024B<br>1MB &#x3D; 1024KB<br>1GB &#x3D; 1024MB<br>1TB &#x3D; 1024GB<br>Java语言是强类型语言，对于每一种数据都给出了明确的数据类型，不同的数据类型也分配了不同<strong>内存空间</strong>,所以它们表示的<b>数据大小</b>也是不一样的。<br><img src="/pic/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="数据类型图解"></p><ul><li><table><thead><tr><th>数据类型</th><th>关键字</th><th>内存占用</th><th>取值范围</th></tr></thead><tbody><tr><td></td><td>byte</td><td>1</td><td>-128~127</td></tr><tr><td>整数</td><td>short</td><td>2</td><td>-32768~32767</td></tr><tr><td></td><td>int</td><td>4</td><td>-2的31次方到2的31次方-1</td></tr><tr><td></td><td>long</td><td>8</td><td>-2的63次方到2的63次方-1</td></tr><tr><td>浮点数</td><td>float</td><td>4</td><td>负数-3.402823E+36到-1.401298E-45正数 1.401298E-45到3.402823E+38</td></tr><tr><td></td><td>double</td><td>8</td><td>负数-1.797693E+308到-4.9000000E-324正数4.9000000E-324到1.797693E+308</td></tr><tr><td>字符</td><td>char</td><td>2</td><td>0-65535</td></tr><tr><td>布尔</td><td>boolen</td><td>1</td><td>true,false</td></tr></tbody></table></li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>变量概述：在程序运行过程中，其值可以发生改变的量<br>格式： 数据类型 变量名 &#x3D; 变量值;<br>范例： int a &#x3D; 10;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">variableDemo01</span>&#123;</span><br><span class="line">    <span class="comment">//定义变量</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">    <span class="comment">//输出变量</span></span><br><span class="line">    System.out.println(a);</span><br><span class="line">    <span class="comment">//修改变量</span></span><br><span class="line">    a = <span class="number">20</span>;</span><br><span class="line">    System.out.println(a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数范围内不能重复定义变量名<br>定义变量时需要赋值，定义long类型的变量时防止整数过大赋值时要加L<br>定义float类型的变量是防止数据类型不兼容，赋值时要加F</p><h3 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h3><p>标识符：就是给类，方法，变量等其名字的符号<br>定义规则：<br>    由数字、字母、下划线(_)和美元符($)组成<br>    不能以数字开头<br>    不能是关键字<br>    区分大小写</p><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>自动类型转换<br>    把一个表示数据范围小的数值或者变量赋值给另一个表示数据范围大的变量</p><p><img src="/pic/%E6%95%B0%E6%8D%AE%E8%8C%83%E5%9B%B4%E5%A4%A7%E5%B0%8F.png" alt="数据范围大小"></p><p>强制类型转换<br>    把一个表示数据范围大的数值或者变量赋值给另一个表示数据范围小的变量(会有数据丢失)<br>格式：目标数据类型 变量名 &#x3D; (目标数据类型)值或者变量；<br>范例： int k &#x3D; (int)88.88;</p><h3 id="字符和字符串的“-”操作"><a href="#字符和字符串的“-”操作" class="headerlink" title="字符和字符串的“+”操作"></a>字符和字符串的“+”操作</h3><p>字符的”+”操作是拿字符在计算机底层对应的数值来进行计算的<br>“A”&#x3D;65,A-Z是连续的<br>“a”&#x3D;97,a-z是连续的<br>“0”&#x3D;48,0-9是连续的<br>tips：算术表达式中包含多个基本数据类型的值的时候，整个算术表达式的类型会自动进行提升<br>提升规则： byte类型，short类型和char类型将被提升到int类型<br>          整个表达式的类型自动提升到表达式中最高等级操作数同样的类型<br>字符串的”+”操作中出现子字符串时，这个”+”是算术运算符<br>e.g.:”xiaoxia”+666 &#x3D; xiaoxia666<br>    1 + 99 +”xiaoxia” &#x3D; 100xiaoxia</p><h3 id="数据输入"><a href="#数据输入" class="headerlink" title="数据输入"></a>数据输入</h3><p>Scanner使用的基本步骤</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.ytil.Scanner;<span class="comment">//导包的动作必须出现在类定义的上边//</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ScannerDemo</span>&#123;</span><br><span class="line">    <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);<span class="comment">//创建对象，sc为变量名//</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> sc.nextInt();<span class="comment">//接收数据，i是变量名//</span></span><br><span class="line">    System.out.println(<span class="string">&quot;x:&quot;</span>+ x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h1><p><span id="gray">顺序结构</span><br><span id="gray">分支结构<b>(if,switch)</b></span><br><span id="gray">循环结构<b>(for,while,do…while)</b></span></p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p>格式：<br>if(关系表达式){<br>语句体;<br>}<br>if(关系表达式){<br>语句体1;}<br>    else{<br>语句体2<br>    }<br>}</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IfDemo</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">if</span>(a == b)&#123;<span class="comment">//如果关系表达式的值为true就执行语句体//</span></span><br><span class="line">            System.out.println(<span class="string">&quot;a等于b&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;a不等于b&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java notes（begins）</title>
      <link href="/2022/09/03/Java-notes/"/>
      <url>/2022/09/03/Java-notes/</url>
      
        <content type="html"><![CDATA[<p>从2022年8月29日起，我便是一名计算机学院的大三学生了，这标志着我从工地成功润到了码农行业，为了更系统地学习，我决定在博客里撰写自己的学习笔记，未来的成就如何，全靠自己。加油！</p><p>JAVA的跨平台原理：win、linux、mac操作系统通过<b>jvm</b>程序实现</p><h1 id="JRE-amp-JDE"><a href="#JRE-amp-JDE" class="headerlink" title="JRE&amp;JDE"></a>JRE&amp;JDE</h1><h3 id="JRE-Java-Runtime-Environment"><a href="#JRE-Java-Runtime-Environment" class="headerlink" title="JRE (Java Runtime Environment)"></a>JRE (Java Runtime Environment)</h3><p>是Java程序的运行时环境，包含<strong>JVM</strong>和运行时所需要的核心类库。<br>如果我们想要运行一个已有的java程序，那么只需安装<b>JRE</b>即可.</p><h3 id="JDK-Java-Development-Kit"><a href="#JDK-Java-Development-Kit" class="headerlink" title="JDK (Java Development Kit)"></a>JDK (Java Development Kit)</h3><p>是Java程序开发工具包，包含<b>JRE</b>和开发人员使用的工具。<br>其中的开发工具：编译工具（javac.exe)和运行工具（java.exe).<br>我们想要开发一个全新的Java程序，那么必须安装<b>JDK</b>.<br><b>开发java程序，需要三个步骤：编写程序，编译程序，运行程序</b></p><h1 id="JDK的安装目录"><a href="#JDK的安装目录" class="headerlink" title="JDK的安装目录"></a>JDK的安装目录</h1><ul><li><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令. <b>javac</b>和<b>java</b>就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件.</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件.</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块.</td></tr><tr><td>legal</td><td>该路几个下存放了JDK各模块的授权文档.</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包.</td></tr><tr><td>其余文件为说明性文档</td><td></td></tr></tbody></table></li></ul><h1 id="常用的DOS命令"><a href="#常用的DOS命令" class="headerlink" title="常用的DOS命令"></a>常用的DOS命令</h1><ul><li><table><thead><tr><th>操作</th><th>说明</th></tr></thead><tbody><tr><td>盘符名称：</td><td>盘符切换。E：回车，表示切换到E盘</td></tr><tr><td>dir</td><td>查看当前路径下的内容</td></tr><tr><td>cd 目录</td><td>进入单级目录 cd itheima</td></tr><tr><td>cd ..</td><td>回退到上一级目录.</td></tr><tr><td>cd 目录1\目录2..</td><td>进入多级目录.</td></tr><tr><td>cd \</td><td>回到盘符目录.</td></tr><tr><td>cls</td><td>清屏</td></tr><tr><td>exit</td><td>退出命令提示符窗口</td></tr><tr><td>↑↓箭头可以切换使用过的命令</td><td></td></tr></tbody></table></li></ul><h3 id="path环境变量配置"><a href="#path环境变量配置" class="headerlink" title="path环境变量配置"></a>path环境变量配置</h3><p>此电脑→属性→高级系统设置→高级→环境变量→新建系统变量→目录为JDK工具目录</p><h1 id="HelloWorld案例"><a href="#HelloWorld案例" class="headerlink" title="HelloWorld案例"></a>HelloWorld案例</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;HelloWorld&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先用javac进行编译，再用java执行</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
